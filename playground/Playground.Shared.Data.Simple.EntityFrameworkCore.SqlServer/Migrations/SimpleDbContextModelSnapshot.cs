// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Playground.Shared.Data.Simple.EntityFrameworkCore;

#nullable disable

namespace Playground.Shared.Data.Simple.EntityFrameworkCore.SqlServer.Migrations
{
    [DbContext(typeof(SimpleDbContext))]
    partial class SimpleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ES.FX.TransactionalOutbox.Entities.Outbox", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("AddedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeliveryDelayedUntil")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("Lock")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("AddedAt");

                    b.HasIndex("DeliveryDelayedUntil");

                    b.HasIndex("Lock");

                    b.ToTable("__Outboxes", (string)null);
                });

            modelBuilder.Entity("ES.FX.TransactionalOutbox.Entities.OutboxMessage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ActivityId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTimeOffset>("AddedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("DeliveryAttempts")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("DeliveryFirstAttemptedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeliveryLastAttemptedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeliveryNotAfter")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeliveryNotBefore")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Headers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OutboxId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayloadType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("__OutboxMessages", (string)null);
                });

            modelBuilder.Entity("Playground.Shared.Data.Simple.EntityFrameworkCore.Entities.SimpleUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("SimpleUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
