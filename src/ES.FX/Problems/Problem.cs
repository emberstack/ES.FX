using JetBrains.Annotations;

namespace ES.FX.Problems;

/// <summary>
///     Represents a problem (based on RFC 7807 - https://datatracker.ietf.org/doc/html/rfc7807).
/// </summary>
[PublicAPI]
[Serializable]
public record Problem
{
    /// <summary>
    ///     Initializes a new instance of the <see cref="Problem" /> class.
    ///     This constructor is parameterless and used primarily for deserialization or model binding.
    /// </summary>
    public Problem()
    {
    }

    /// <summary>
    ///     Initializes a new instance of the <see cref="Problem" /> class with the specified values.
    /// </summary>
    /// <param name="type">A URI reference that identifies the problem type. Defaults to "about:blank".</param>
    /// <param name="title">A short, human-readable summary of the problem type.</param>
    /// <param name="detail">A human-readable explanation specific to this occurrence of the problem.</param>
    /// <param name="instance">
    ///     A URI reference that identifies the specific occurrence of the problem.
    ///     It may or may not yield further information if dereferenced.
    /// </param>
    /// <param name="status">The status code generated by the origin for this occurrence of a problem.</param>
    public Problem(
        string type = "about:blank",
        string? title = null,
        string? detail = null,
        string? instance = null,
        int? status = null)
    {
        Type = type;
        Title = title;
        Detail = detail;
        Instance = instance;
        Status = status;
    }

    /// <summary>
    ///     A URI reference [RFC3986] that identifies the problem type.
    ///     When this member is not present, its value is assumed to be "about:blank".
    /// </summary>
    public string Type { get; set; } = "about:blank";

    /// <summary>
    ///     A short, human-readable summary of the problem type.
    ///     It should not change from occurrence to occurrence of the problem.
    /// </summary>
    public string? Title { get; set; }

    /// <summary>
    ///     A human-readable explanation specific to this occurrence of the problem.
    /// </summary>
    public string? Detail { get; set; }

    /// <summary>
    ///     A URI reference that identifies the specific occurrence of the problem.
    ///     It may or may not yield further information if dereferenced.
    /// </summary>
    public string? Instance { get; set; }

    /// <summary>
    ///     The status code generated by the origin server for this occurrence of the problem.
    /// </summary>
    public int? Status { get; set; }
}